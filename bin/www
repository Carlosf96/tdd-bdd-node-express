#!/usr/bin/env node
var app = require('../app');
var http = require('http');
require('dotenv').config();
const port = normalizePort(3000);

const server = http.createServer(app);
app.set("port", port)
server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) { 
  if (error.syscall !== "listen") { 
    throw error;
  }
  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) { 
    case "EACCESS":
      console.error(bind + " requires elevated privliges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      console.log('logging default error')
      throw error;
  }
}

function onListening() {
  const addy = server.address();
  const bind = typeof addy === "string" ? "Pipe " + addy : "Port " + addy.port;
  console.log(`test server listening on port ${port}`);
}